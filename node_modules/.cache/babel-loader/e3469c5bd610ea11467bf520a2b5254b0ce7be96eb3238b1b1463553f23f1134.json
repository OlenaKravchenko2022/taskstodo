{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kravchenko\\\\Desktop\\\\tasks\\\\taskstodo\\\\src\\\\components\\\\Item.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Item({\n  title,\n  id,\n  status\n}) {\n  _s();\n  const classes = [\"todo\"];\n  const [checked, setChecked] = useState(status);\n  if (checked) {\n    classes.push(\"status\");\n  }\n  const updateStatus = () => {\n    setChecked(!checked);\n    const storedTodos = JSON.parse(localStorage.getItem(\"tasks\"));\n    storedTodos.map(el => {\n      if (el.id === id) {\n        el.status = !checked;\n      }\n      return true;\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(storedTodos));\n  };\n  const [visible, setVisible] = useState(true);\n  const removeElement = () => {\n    setVisible(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: visible && /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.join(\" \"),\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checked,\n          onChange: updateStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"material-icons red-text\",\n          onClick: removeElement,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Item, \"l1WaCGAwS8X8rUU5tLI0wiE6pKc=\");\n_c = Item;\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Item","title","id","status","_s","classes","checked","setChecked","push","updateStatus","storedTodos","JSON","parse","localStorage","getItem","map","el","setItem","stringify","visible","setVisible","removeElement","prev","children","className","join","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kravchenko/Desktop/tasks/taskstodo/src/components/Item.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Item({ title, id, status }) {\r\n  const classes = [\"todo\"];\r\n  const [checked, setChecked] = useState(status);\r\n\r\n  if (checked) {\r\n    classes.push(\"status\");\r\n  }\r\n\r\n  const updateStatus = () => {\r\n    setChecked(!checked);\r\n    const storedTodos = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    storedTodos.map((el) => {\r\n      if (el.id === id) {\r\n        el.status = !checked;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    localStorage.setItem(\"tasks\", JSON.stringify(storedTodos));\r\n  };\r\n  const [visible, setVisible] = useState(true);\r\n  const removeElement = () => {\r\n    setVisible((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <li className={classes.join(\" \")}>\r\n          <label>\r\n            <input type=\"checkbox\" checked={checked} onChange={updateStatus} />\r\n            <span>{title}</span>\r\n            <i className=\"material-icons red-text\" onClick={removeElement}>\r\n              X\r\n            </i>\r\n          </label>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,IAAIA,CAAC;EAAEC,KAAK;EAAEC,EAAE;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAMC,OAAO,GAAG,CAAC,MAAM,CAAC;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACQ,MAAM,CAAC;EAE9C,IAAIG,OAAO,EAAE;IACXD,OAAO,CAACG,IAAI,CAAC,QAAQ,CAAC;EACxB;EAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBF,UAAU,CAAC,CAACD,OAAO,CAAC;IACpB,MAAMI,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7DJ,WAAW,CAACK,GAAG,CAAEC,EAAE,IAAK;MACtB,IAAIA,EAAE,CAACd,EAAE,KAAKA,EAAE,EAAE;QAChBc,EAAE,CAACb,MAAM,GAAG,CAACG,OAAO;MACtB;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IAEFO,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAACR,WAAW,CAAC,CAAC;EAC5D,CAAC;EACD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM0B,aAAa,GAAGA,CAAA,KAAM;IAC1BD,UAAU,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAC7B,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,EACGJ,OAAO,iBACNtB,OAAA;MAAI2B,SAAS,EAAEnB,OAAO,CAACoB,IAAI,CAAC,GAAG,CAAE;MAAAF,QAAA,eAC/B1B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAO6B,IAAI,EAAC,UAAU;UAACpB,OAAO,EAAEA,OAAQ;UAACqB,QAAQ,EAAElB;QAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnElC,OAAA;UAAA0B,QAAA,EAAOtB;QAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBlC,OAAA;UAAG2B,SAAS,EAAC,yBAAyB;UAACQ,OAAO,EAAEX,aAAc;UAAAE,QAAA,EAAC;QAE/D;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACL,gBACD,CAAC;AAEP;AAAC3B,EAAA,CAxCuBJ,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}