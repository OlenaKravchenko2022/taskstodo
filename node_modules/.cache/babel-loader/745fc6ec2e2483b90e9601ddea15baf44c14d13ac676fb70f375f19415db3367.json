{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kravchenko\\\\Desktop\\\\tasks\\\\taskstodo\\\\src\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport List from \"./components/List\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const storedTodos = localStorage.getItem(\"tasks\");\n    if (!storedTodos) {\n      return [];\n    } else {\n      return JSON.parse(storedTodos);\n    }\n  });\n  const [taskTitle, setTasktitle] = useState(\"\");\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = e => {\n    const storedTodos = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (e.key === \"Enter\" && e.target.value !== \"\") {\n      setTasks([...storedTodos, {\n        id: uuidv4(),\n        title: taskTitle,\n        status: false\n      }]);\n      setTasktitle(\"\");\n    }\n  };\n  const date = new Date();\n  const monthNames = [\"January\", \"Febrary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const month = monthNames[date.getMonth()];\n  const day = date.getDate();\n  //const year = date.getFullYear();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Write it here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [day, \" \", month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskTitle,\n        onChange: event => setTasktitle(event.target.value),\n        onKeyDown: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"br/FiMzoI4n+UY5o2lHXNg51tRI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","List","v4","uuidv4","jsxDEV","_jsxDEV","Main","_s","tasks","setTasks","storedTodos","localStorage","getItem","JSON","parse","taskTitle","setTasktitle","setItem","stringify","addTask","e","key","target","value","id","title","status","date","Date","monthNames","month","getMonth","day","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","event","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/kravchenko/Desktop/tasks/taskstodo/src/Main.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport List from \"./components/List\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Main() {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const storedTodos = localStorage.getItem(\"tasks\");\r\n    if (!storedTodos) {\r\n      return [];\r\n    } else {\r\n      return JSON.parse(storedTodos);\r\n    }\r\n  });\r\n\r\n  const [taskTitle, setTasktitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (e) => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n      setTasks([\r\n        ...storedTodos,\r\n        {\r\n          id: uuidv4(),\r\n          title: taskTitle,\r\n          status: false,\r\n        },\r\n      ]);\r\n      setTasktitle(\"\");\r\n    }\r\n  };\r\n\r\n  const date = new Date();\r\n  const monthNames = [\r\n    \"January\",\r\n    \"Febrary\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const month = monthNames[date.getMonth()];\r\n  const day = date.getDate();\r\n  //const year = date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Note your tasks</h1>\r\n      <h2>Write it here</h2>\r\n      <span>\r\n        {day} {month}\r\n      </span>\r\n      <div className=\"input-field\">\r\n        <input\r\n          type=\"text\"\r\n          value={taskTitle}\r\n          onChange={(event) => setTasktitle(event.target.value)}\r\n          onKeyDown={addTask}\r\n        />\r\n        <label>Task name</label>\r\n      </div>\r\n      <List tasks={tasks} />\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}