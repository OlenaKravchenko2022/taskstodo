{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kravchenko\\\\Desktop\\\\task\\\\todotask\\\\src\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport List from \"./components/List\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 0,\n    title: \"clean\",\n    status: \"false\"\n  }]);\n  const [taskTitle, setTasktitle] = useState(\"\");\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = e => {\n    const storedTodos = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (e.key === \"Enter\" && e.target.value !== \"\") {\n      setTasks([...storedTodos, {\n        id: uuidv4(),\n        title: taskTitle,\n        status: false\n      }]);\n      setTasktitle(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskTitle,\n        onChange: event => setTasktitle(event.target.value),\n        onKeyDown: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"0p+fzMs7SH16cKSWb1TClxTOGiU=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","List","v4","uuidv4","jsxDEV","_jsxDEV","Main","_s","tasks","setTasks","id","title","status","taskTitle","setTasktitle","localStorage","setItem","JSON","stringify","addTask","e","storedTodos","parse","getItem","key","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","event","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/kravchenko/Desktop/task/todotask/src/Main.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport List from \"./components/List\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Main() {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"clean\",\r\n      status: \"false\",\r\n    },\r\n  ]);\r\n\r\n  const [taskTitle, setTasktitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = (e) => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n      setTasks([\r\n        ...storedTodos,\r\n        {\r\n          id: uuidv4(),\r\n          title: taskTitle,\r\n          status: false,\r\n        },\r\n      ]);\r\n      setTasktitle(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Note your tasks</h1>\r\n      <div className=\"input-field\">\r\n        <input\r\n          type=\"text\"\r\n          value={taskTitle}\r\n          onChange={(event) => setTasktitle(event.target.value)}\r\n          onKeyDown={addTask}\r\n        />\r\n        <label>Task name</label>\r\n      </div>\r\n      <List tasks={tasks} />\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CACjC;IACEW,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE;EACV,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACde,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACV,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMW,OAAO,GAAIC,CAAC,IAAK;IACrB,MAAMC,WAAW,GAAGJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7D,IAAIH,CAAC,CAACI,GAAG,KAAK,OAAO,IAAIJ,CAAC,CAACK,MAAM,CAACC,KAAK,KAAK,EAAE,EAAE;MAC9CjB,QAAQ,CAAC,CACP,GAAGY,WAAW,EACd;QACEX,EAAE,EAAEP,MAAM,CAAC,CAAC;QACZQ,KAAK,EAAEE,SAAS;QAChBD,MAAM,EAAE;MACV,CAAC,CACF,CAAC;MACFE,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,oBACET,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3B,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BvB,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXP,KAAK,EAAEb,SAAU;QACjBqB,QAAQ,EAAGC,KAAK,IAAKrB,YAAY,CAACqB,KAAK,CAACV,MAAM,CAACC,KAAK,CAAE;QACtDU,SAAS,EAAEjB;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACF3B,OAAA;QAAAuB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACN3B,OAAA,CAACJ,IAAI;MAACO,KAAK,EAAEA;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACzB,EAAA,CA7CQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA8Cb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}